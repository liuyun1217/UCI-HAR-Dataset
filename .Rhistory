library(datasets)
data(iris)
>iris
?iris
iris
sapply(iris,mean)
class(iris)
summary(iris)
sapply(iris,"virginica",mean)
sapply(iris[,"virginica"],mean)
head(iris)
rowMeans(iris[, 101:150])
rowMeans(iris[, 1:4])
rowMeans(iris[101:150,)
apply(iris[101:150,], 2, mean)
iris[1,]
iris[101,]
iris[101:150,]
apply(iris[101:150,],mean)
rowMeans(iris[101:150,])
meam(iris[101:150,])
mean(iris[101:150,])
mean(iris[101:150,1])
iris[101:150,1]
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
data(mtcars)
?mtcars
head(mtcars)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429-82.63636
debug(ls)
ls
quit()
data()
data(rivers)
head(rivers)
length(rivers)
summary(rivers)
rivers
stem(rivers)
stem(log(rivers))
?stem
hist(rivers, col="#333333", border="white", breaks=25)
hist(rivers, col="#333555", border="white", breaks=25)
hist(rivers, col="#333555", border="yellow", breaks=25)
hist(rivers, col="#333555", border="yellow", breaks=5)
hist(rivers, col="#333555", border="yellow", breaks=50)
hist(log(rivers), col="#333333", border="white", breaks=25)
data(discoveries)
discoveries
?discoveries
round(runif(7, min=.5, max=6.5))
letters
?gsub
data(infert)
infert$education
head(infert)
list1 <- list(time(1:40))
list1
list1$time
list1$price[4]
mat <- matrix(nrow = 3, ncol = 2, c(1,2,3,4,5,6))
mat
apply(mat, MAR = 2, myFunc)
install.packages("plyr")
require(plyr)
?plyr
pets <- read.csv("http://learnxinyminutes.com/docs/pets.csv")
pets
getwd()
write.csv(pets, "pets2.csv")
plot(list1$time, list1$price, main = "fake data")
list1
linearModel <- lm(price  ~ time, data = list1)
list1$price = c(rnorm(40,.5*list1$time,4))
list1
hist(rpois(n = 10000, lambda = 5), col = "thistle")
barplot(c(1,4,5,1,2), names.arg = c("red","blue","purple","green","yellow"))
quit()
set.seed(1234)
par(mar = c(0,0,0,0))
x<-rnorm(12,mean = rep(1:3,each = 4),sd = 0.2)
y<-rnorm(12,mean = rep(1,2,1),sd = 0.2)
plot(x,y,col="red",pch = 19,cex = 2)
text(x+0.05,y+0.05,labels = as.character(1:12))
dataFrame <-data.frame(x = x,y =y)
dist(dataFrame)
distxy <- dist(dataFrame)
hClustering M-hclust(distxy)
hClustering <-hclust(distxy)
plot(hClustering)
dataMa<-as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMa)
y()
q()
set.seed(1234)
par(mar = c(0,0,0,0))
x<-rnorm(12,mean = rep(1:3,each = 4),sd = 0.2)
y<-rnorm(12,mean = rep(1,2,1),sd = 0.2)
plot(x,y,col="red",pch = 19,cex = 2)
text(x+0.05,y+0.05,labels = as.character(1:12))
dataFrame <-data.frame(x = x,y =y)
kmensObj<-kmeans(dataFrame,centers = 3)
kmensObj
kmensObj$cluster
par(mar = rep(0.2,4))
plot(x,y,col = kmensObj$cluster,pch = 19,cex = 2)
points(kmensObj$centers,col = 1:3,pch = 3,cex = 3, lwd =3)
q()
setwd("F:/R Data/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset")
load("F:/R Data/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/var.RData")
all_m_s_y_tb$activity
class(all_m_s_y_tb$activity)
library("dplyr", lib.loc="d:/Program Files/R/R-3.1.2/library")
library(dplyr)
library(tidyr)
all_subject_actvity<-group_by(all_m_s_y_tb,activity,subject)
all_subject_actvity<-group_by(all_m_s_y_tb,subject,activity)
all_m_s_y_tb$activity<-as.character(activity_lables[all_y$activity,2])
class(all_m_s_y_tb$activity)
all_subject_actvity<-group_by(all_m_s_y_tb,activity,subject)
all_subject_actvity
?summarise
summarise(all_subject_actvity)
all_subject_actvity<-group_by(all_m_s_y_tb,subject,activity)
summarise(all_subject_actvity)
summarise(all_subject_actvity,mean(all_subject_actvity))
xx<-summarise(all_subject_actvity,mean(all_subject_actvity))
xx
head(xx)
xx$mean(all_subject_actvity)
xx<-summarise(all_subject_actvity,mean(all_subject_actvity[all_subject_actvity$subject,]))
mean(all_subject_actvity[all_subject_actvity$subject,])
all_subject_actvity$subject
class(all_subject_actvity$subject)
str(all_subject_actvity$subject)
mean(all_subject_actvity[1,])
all_subject_actvity[1,]
as.numeric(all_subject_actvity[1,])
all_subject_actvity[1,1:66]
mean(all_subject_actvity[1,1:66])
mean(as.numeric(all_subject_actvity[1,1:66]))
mean(as.numeric(all_subject_actvity[all_subject_actvity$activity,1:66]))
all_subject_actvity[all_subject_actvity$activity,1:66])
all_subject_actvity[all_subject_actvity$activity,2])
all_subject_actvity([all_subject_actvity$activity,2])
all_subject_actvity[all_subject_actvity$activity,2]
all_subject_actvity$activity
all_subject_actvity$
save.image("F:/R Data/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/var.RData")
q()
